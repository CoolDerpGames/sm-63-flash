(()=>{"use strict";const e={ruffleEnable:!0,ignoreOptout:!1};let s,t,o,r,n;function a(e){return new Promise(((s,t)=>{e((e=>{const o=chrome.runtime.lastError;o?t(o):s(e)}))}))}if("undefined"!=typeof chrome)s={getMessage:e=>chrome.i18n.getMessage(e)},t={local:{get:e=>a((s=>chrome.storage.local.get(e,s))),remove:e=>a((s=>chrome.storage.local.remove(e,s))),set:e=>a((s=>chrome.storage.local.set(e,s)))},sync:{get:e=>a((s=>chrome.storage.sync.get(e,s))),remove:e=>a((s=>chrome.storage.sync.remove(e,s))),set:e=>a((s=>chrome.storage.sync.set(e,s)))},onChanged:{addListener:e=>chrome.storage.onChanged.addListener(e)}},o={reload:e=>a((s=>chrome.tabs.reload(e,void 0,s))),query:e=>a((s=>chrome.tabs.query(e,s))),sendMessage:(e,s,t)=>a((o=>chrome.tabs.sendMessage(e,s,t,o)))},r={onMessage:{addListener:e=>chrome.runtime.onMessage.addListener(e)},getURL:e=>chrome.runtime.getURL(e)},n=()=>a((e=>chrome.tabs.create({url:"/options.html"},e)));else{if("undefined"==typeof browser)throw new Error("Extension API not found.");s={getMessage:e=>browser.i18n.getMessage(e)},t={local:{get:e=>browser.storage.local.get(e),remove:e=>browser.storage.local.remove(e),set:e=>browser.storage.local.set(e)},sync:{get:e=>browser.storage.sync.get(e),remove:e=>browser.storage.sync.remove(e),set:e=>browser.storage.sync.set(e)},onChanged:{addListener:e=>browser.storage.onChanged.addListener(e)}},o={reload:e=>browser.tabs.reload(e),query:e=>browser.tabs.query(e),sendMessage:(e,s,t)=>browser.tabs.sendMessage(e,s,t)},r={onMessage:{addListener:e=>browser.runtime.onMessage.addListener(e)},getURL:e=>browser.runtime.getURL(e)},n=()=>browser.runtime.openOptionsPage()}window.addEventListener("DOMContentLoaded",(()=>{document.title=s.getMessage("settings_page"),async function(o){const r=function(){const e={};for(const s of document.getElementsByClassName("option")){const[t]=s.getElementsByTagName("input");if("checkbox"!==t.type)continue;const[o]=s.getElementsByTagName("label");e[t.id.replace(/[^a-z\d](.)/gi,((e,s)=>s.toUpperCase()))]={option:s,checkbox:t,label:o}}return e}(),n=await async function(s){const o=await t.sync.get(s);return Object.assign(Object.assign({},e),o)}(Object.keys(r));for(const[e,s]of Object.entries(n))r[e].checkbox.checked=s;for(const[e,{checkbox:o,label:a}]of Object.entries(r))o.addEventListener("click",(()=>{const s=o.checked;n[e]=s,t.sync.set({[e]:s})})),a.textContent=s.getMessage(`settings_${o.id}`),a.classList.add("notransition"),a.offsetHeight,a.classList.remove("notransition");t.onChanged.addListener(((e,s)=>{if("sync"===s){for(const[s,t]of Object.entries(e))r[s]&&(r[s].checkbox.checked=t.newValue,n[s]=t.newValue);o&&o(n)}})),o&&o(n)}()}))})();